name: Build & Deploy Spring Boot to ECS

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    name: Build & Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Build project
        run: ./mvnw clean package -DskipTests

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Build Docker image
        run: docker build -t football-manager .

      - name: Tag Docker image
        run: docker tag football-manager:latest 024848448237.dkr.ecr.us-east-1.amazonaws.com/football-manager-repository:latest

      - name: Push Docker image to ECR
        run: docker push 024848448237.dkr.ecr.us-east-1.amazonaws.com/football-manager-repository:latest

      - name: Render ECS Task Definition
        id: render-task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: football-manager-container
          image: 024848448237.dkr.ecr.us-east-1.amazonaws.com/football-manager-repository:latest

      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        env:
          AWS_REGION: us-east-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          service: ${{ secrets.ECS_SERVICE }}
          cluster: ${{ secrets.ECS_CLUSTER }}
          task-definition: ${{ steps.render-task-def.outputs.task-definition }}
